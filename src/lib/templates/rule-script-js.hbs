"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// ------------------------------------------------------------------------------
// Public
// ------------------------------------------------------------------------------
const rule = {
    create(context) {
        // Your code here.
        {{#useCase.dom}}
        const validateElement = (elementFound) => {
            // Code to validate the rule on the event when an element is visited.
        };
        {{/useCase.dom}}

        {{#useCase.request}}
        const validateFetchStart = (fetchStart) => {
            // Code to validate the rule on the event fetch::start.
        };
        const validateFetchEnd = (fetchEnd) => {
            // Code to validate the rule on the event fetch::end.
        };
        const validateFetchError = (fetchError) => {
            // Code to validate the rule on the event fetch::error.
        };
        {{/useCase.request}}

        {{#useCase.thirdPartyService}}
        const validateFetchStart = (fetchStart) => {
            // Code to validate the rule on the event fetch::start.
        };
        const validateFetchEnd = (fetchEnd) => {
            // Code to validate the rule on the event fetch::end.
        };
        {{/useCase.thirdPartyService}}

        {{#useCase.jsInjection}}
        const validateScanEnd = async (scanEnd) => {
            const jsCode = 'var a = 1 + 1;';
            const result = await context.evaluate(jsCode);

            return;
        };
        {{/useCase.jsInjection}}

        return {
            {{#useCase.dom}}
            'element::{{elementType}}': validateElement
            {{/useCase.dom}}
            {{#useCase.request}}
            'fetch::start': validateFetchStart,
            'fetch::end': validateFetchEnd,
            'fetch::error': validateFetchError
            {{/useCase.request}}
            {{#useCase.thirdPartyService}}
            'fetch::start': validateFetchStart,
            'fetch::end': validateFetchEnd
            {{/useCase.thirdPartyService}}
            {{#useCase.jsInjection}}
            'scan::end': validateScanEnd
            {{/useCase.jsInjection}}
            // As many events as you need
        };
    },
    meta: {
        docs: {
            category: '{{category}}',
            description: '{{description}}'
        },
        fixable: 'code',
        recommended: {{isCore}},
        schema: [],
        worksWithLocalFiles: false
    }
}

module.exports = rule;
