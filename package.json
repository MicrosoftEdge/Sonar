{
  "devDependencies": {
    "@alrra/travis-scripts": "^3.0.1",
    "@types/fs-extra": "5.0.4",
    "@types/node": "8.0.14",
    "chalk": "^2.4.1",
    "cpx": "^1.5.0",
    "eslint": "^5.6.1",
    "eslint-plugin-import": "^2.14.0",
    "eslint-plugin-markdown": "^1.0.0-beta.7",
    "eslint-plugin-typescript": "^0.12.0",
    "husky": "^1.1.0",
    "listr": "^0.14.2",
    "listr-input": "^0.1.2",
    "loop": "^3.0.6",
    "markdownlint-cli": "^0.13.0",
    "npm-run-all": "^4.1.2",
    "rimraf": "^2.6.2",
    "shelljs": "^0.8.2",
    "typescript": "^3.0.3",
    "typescript-eslint-parser": "^20.0.0",
    "yargs": "^12.0.2"
  },
  "engines": {
    "node": ">=8.0.0"
  },
  "greenkeeper": {
    "commitMessages": {
      "dependencyUpdate": "Chore: Update `${dependency}` to `v${version}`",
      "devDependencyUpdate": "Chore: Update `${dependency}` to `v${version}`",
      "lockfileUpdate": "Chore: Update lockfile ${lockfilePath}"
    },
    "ignore": [
      "@types/node"
    ]
  },
  "husky": {
    "hooks": {
      "commit-msg": "node scripts/check-commit-message.js",
      "prepare-commit-msg": "node scripts/prepare-commit-message.js"
    }
  },
  "name": "@hint/monorepo",
  "private": true,
  "scripts": {
    "build": "yarn clean && yarn build:hint && yarn build:utils && npm-run-all --parallel build:parser:* && yarn build:connectors && yarn build:utils-test && loop \"yarn build\" --cwd packages/ --exclude configuration-development,configuration-progressive-web-apps,configuration-web-recommended,connector-edge,hint,utils-debugging-protocol-common,utils-connector-tools,utils-tests-helpers,connector-chrome,connector-jsdom,connector-local,parser-babel-config,parser-html,parser-javascript,parser-manifest,parser-typescript-config,parser-webpack-config",
    "build:connector-chrome": "cd packages/connector-chrome && yarn build",
    "build:connector-edge": "node -e \"process.platform !== 'win32' && process.exit(1);\" && (cd packages/connector-edge && yarn build) || echo \"\"",
    "build:connector-jsdom": "cd packages/connector-jsdom && yarn build",
    "build:connector-local": "cd packages/connector-local && yarn build",
    "build:connectors": "yarn build:connector-edge && yarn build:connector-chrome && yarn build:connector-jsdom && yarn build:connector-local",
    "build:hint": "cd packages/hint && yarn build",
    "build:parser:babel": "cd packages/parser-babel-config && yarn build",
    "build:parser:html": "cd packages/parser-html && yarn build",
    "build:parser:js": "cd packages/parser-javascript && yarn build",
    "build:parser:manifest": "cd packages/parser-manifest && yarn build",
    "build:parser:ts": "cd packages/parser-typescript-config && yarn build",
    "build:parser:webpack": "cd packages/parser-webpack-config && yarn build",
    "build:scripts": "npm run clean:root && npm run lint:scripts && npm-run-all --parallel build:scripts:*",
    "build:scripts:non-ts": "cpx \"./scripts/{!(*.ts),.!(ts)}\" dist/scripts",
    "build:scripts:ts": "tsc --outDir dist/scripts",
    "build:utils": "yarn build:utils-server && yarn build:utils-connector && yarn build:utils-cdp",
    "build:utils-cdp": "cd packages/utils-debugging-protocol-common && yarn build",
    "build:utils-connector": "cd packages/utils-connector-tools && yarn build",
    "build:utils-server": "cd packages/utils-create-server && yarn build",
    "build:utils-test": "cd packages/utils-tests-helpers && yarn build",
    "clean": "npm-run-all clean:*",
    "clean:packages": "rimraf \"packages/!(extension-vscode)/{dist,node_modules,npm-shrinkwrap.json,package-lock.json,yarn.lock}\"",
    "clean:root": "rimraf dist",
    "lint": "npm-run-all lint:*",
    "lint:md": "markdownlint *.md",
    "lint:scripts": "eslint scripts .travis --cache --ext js --ext ts --report-unused-disable-directives",
    "pre-release": "npm run clean:packages && npm run build:scripts && npm run release -- --prerelease",
    "release": "npm run clean:packages && npm run build:scripts && node dist/scripts/release.js",
    "test": "npm run clean && node scripts/test.js",
    "test-root": "npm run clean && npm run lint && npm-run-all --parallel build:scripts:*",
    "watch:scripts": "npm run clean && npm-run-all --continue-on-error --parallel watch:scripts:*",
    "watch:scripts:non-ts": "npm run build:scripts:non-ts && npm run build:scripts:non-ts --watch --no-initial",
    "watch:scripts:ts": "npm run build:scripts:ts --watch"
  },
  "workspaces": {
    "nohoist": [
      "**/vscode",
      "**/vscode-languageclient",
      "**/vscode-languageserver"
    ],
    "packages": [
      "packages/!(connector-edge)"
    ]
  }
}
