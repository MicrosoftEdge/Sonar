import { Event, {{#each eventTypes}}{{this}}, {{/each}}Parser } from 'hint/dist/src/lib/types';
import { Engine } from 'hint/dist/src/lib/engine';

export default class {{capitalizedName}} extends Parser {
    public constructor(engine: Engine) {
        super(engine);

{{#each events}}
        engine.on('{{event}}', this.{{handler}}.bind(this));
{{/each}}
    }

{{#each events}}
    private async {{handler}}({{varName}}: {{type}}) {
        /*
         * You can extend Event to add the information
         * you will need in you hints.
         * i.e.
         *    type ScriptParse = Event & {
         *        sourceCode: any;
         *    }
         */
        const eventData: Event = {{varName}};

        await this.engine.emitAsync('parse::{{../normalizedName}}', eventData);
    }
{{/each}}
}
