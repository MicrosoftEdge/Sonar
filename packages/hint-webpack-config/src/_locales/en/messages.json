{
    "babelModules": {
        "description": "Report message when modules option si not false",
        "message": "Babel presets `modules` option should be `false`"
    },
    "babelParserActivated": {
        "description": "Report message when the babel-config parser is not activated",
        "message": "The parser babel-config should be activated"
    },
    "config-exists/description": {
        "description": "Metadata description",
        "message": "`webpack-config/config-exists` warns against not having a webpack configuration file"
    },
    "config-exists/name": {
        "description": "Metadata name",
        "message": "Has webpack configuration"
    },
    "configExists": {
        "description": "Report message when a webpack configuration file doesn't exists",
        "message": "webpack configuration file not found in your project."
    },
    "esnext": {
        "description": "Report message when the compilerOptions.module doesn't have esnext configured",
        "message": "TypeScript `compilerOptions.module` option should be `esnext`"
    },
    "eventReceived": {
        "description": "Debug information to show when an event is received",
        "message": "$1 received"
    },
    "is-installed/description": {
        "description": "Metadata description",
        "message": "`webpack-config/is-installed` warns against not having webpack installed"
    },
    "is-installed/name": {
        "description": "Metadata name",
        "message": "Has webpack"
    },
    "is-valid/description": {
        "description": "Metadata description",
        "message": "`webpack-config/is-valid` warns against providing an invalid webpack configuration file `webpack.config.js`"
    },
    "is-valid/name": {
        "description": "Metadata name",
        "message": "Valid webpack configuration"
    },
    "isInstalled": {
        "description": "Report message when webpack is not installed in your project",
        "message": "webpack is not installed in your project."
    },
    "module-esnext-typescript/description": {
        "description": "Metadata description",
        "message": "`webpack-config/module-esnext-typescript` warns against not having set the propety `compilerOptions.module` to `esnext` in typescript configuration file"
    },
    "module-esnext-typescript/name": {
        "description": "Metadata name",
        "message": "webpack compatible TypeScript `module`"
    },
    "modules-false-babel/description": {
        "description": "Metadata description",
        "message": "`webpack-config/modules-false-babel` warns against not having set the propety `modules` to `false` in presets in babel configuration file"
    },
    "modules-false-babel/name": {
        "description": "Metadata name",
        "message": "No Babel `modules` with webpack"
    },
    "no-devtool-in-prod/description": {
        "description": "Metadata description",
        "message": "`webpack-config/no-devtool-in-prod` warns against having set the propety `devtool` to `eval`"
    },
    "no-devtool-in-prod/name": {
        "description": "Metadata name",
        "message": "No production `devtool` in webpack"
    },
    "noEval": {
        "description": "Report message when devtool = eval is configured for production",
        "message": "`$1` not recommended for prodution"
    },
    "typeScriptParserActivated": {
        "description": "Report message when the typescript-config parser is not activated",
        "message": "The parser typescript-config should be activated"
    },
    "webpackParserActivated": {
        "description": "Report message when the webpack-config parser is not activated",
        "message": "The parser webpack-config should be activated"
    }
}
