const writeFile = require('fs').writeFile;
const package = require('../package.json');

const hintModules = Object.keys(package.devDependencies).filter((name) => {
    return name.startsWith('@hint/hint-');
});

// Generate hints.import.ts

const hintsPath = `${__dirname}/../src/shared/hints.import.ts`;
const hints = `// autogenerated by scripts/import-hints.js

import { IHintConstructor } from 'hint/dist/src/lib/types';

const hints = [
${
    hintModules.map((name) => {
        return `    ...Object.values<IHintConstructor>(require('${name}'))`;
    }).join(',\n')
}
];

export default hints;
`;

writeFile(hintsPath, hints, (err) => {
    if (err) {
        throw err;
    } else {
        console.log(`Created: ${hintsPath}`);
    }
});

// Generate metas.imports.ts

const metasPath = `${__dirname}/../src/shared/metas.import.ts`;
const metas = `// autogenerated by scripts/import-hints.js

import { HintMetadata } from 'hint/dist/src/lib/types';

const metas = [
${
    hintModules.map((name) => {
        return `    ...Object.values<HintMetadata>(require('${name}/dist/src/meta'))`;
    }).join(',\n')
}
];

export default metas;
`;

writeFile(metasPath, metas, (err) => {
    if (err) {
        throw err;
    } else {
        console.log(`Created: ${metasPath}`);
    }
});
